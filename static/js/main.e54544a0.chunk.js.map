{"version":3,"sources":["components/Header.tsx","store/store.ts","components/CheckboxList.tsx","components/Buttons.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","count","todos","id","done","makeAutoObservable","this","value","item","length","test","unshift","filter","elem","forEach","el","slice","sort","a","b","compleated","margin","background","paper","CheckboxList","observer","useEffect","Store","report","List","map","labelId","ListItem","onClick","changeCompleate","ListItemText","primary","ListItemSecondaryAction","removeItem","BootstrapButton","withStyles","boxShadow","textTransform","fontSize","border","lineHeight","borderColor","fontFamily","join","Button","Buttons","cleanValue","disableRipple","addTodo","Form","useState","setValue","Input","type","onChange","e","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e54544a0.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { createStyles, alpha, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst Header:FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Todo list\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header","import { makeAutoObservable } from \"mobx\";\r\nimport {ITodo} from '../components/interface'\r\nclass Store {\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n    count: number = 0;\r\n    todos: ITodo[] = [\r\n        {\r\n        id: 0,\r\n        title: 'Wake up at 8:00',\r\n        done: true\r\n    },{\r\n        id: 1,\r\n        title: 'Learn TypeScript',\r\n        done: false\r\n    },{\r\n        id: 2,\r\n        title: 'Implement a project with weather',\r\n        done: false\r\n    }];\r\n    addTodo(value: string) {\r\n        const item: ITodo = {\r\n            id: this.todos.length,\r\n            title: value,\r\n            done: false\r\n        }\r\n        if (/\\S/.test(value)) {\r\n            this.todos.unshift(item)\r\n        }\r\n    }\r\n    removeItem(id: number): void {\r\n        this.todos = this.todos.filter(elem => elem.id !== id)\r\n    }\r\n    changeCompleate(id: number): void {\r\n        this.todos.forEach(el => {\r\n            if (el.id === id) {\r\n                el.done = !el.done\r\n            }\r\n        })\r\n    }\r\n    get compleated() {\r\n        return this.count = this.todos.filter(item => item.done).length\r\n    }\r\n    get sort() {\r\n        return this.todos.slice().sort((a, b) => a.done === b.done ? 0 : a.done ? 1 : -1)\r\n    }\r\n    report() {\r\n        return this.compleated\r\n    }\r\n}\r\nexport default new Store()","import React, {FC, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Store from '../store/store'\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '1300px',\r\n      margin: ' 0 10px',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }),\r\n);\r\nexport const CheckboxList:FC = observer(() => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    return () => {\r\n      Store.report()\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>Completed tasks : {Store.count}</h1>\r\n      <List className={classes.root && 'wrapper'}>\r\n        {Store.sort.map((value) => {\r\n          const labelId = `checkbox-list-label-${value}`;\r\n          return (\r\n            <ListItem className={value.done ? 'compleated items' : 'items'}>\r\n              {\r\n                value.done ?\r\n                  <div className=\"checked\" onClick={() => Store.changeCompleate(value.id)}>\r\n                    <CheckIcon></CheckIcon>\r\n                  </div>\r\n                  :\r\n                  <div className=\"checking\" onClick={() => Store.changeCompleate(value.id)}></div>\r\n              }\r\n              <ListItemText id={labelId} primary={value.title} />\r\n              <ListItemSecondaryAction onClick={() => Store.removeItem(value.id)}>\r\n                <DeleteIcon></DeleteIcon>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n})","import React, { FC } from 'react';\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TypeSetState } from './common'\r\nimport Store from '../store/store'\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#0063cc',\r\n    borderColor: '#0063cc',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      backgroundColor: '#0069d9',\r\n      borderColor: '#0062cc',\r\n      boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#0062cc',\r\n      borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n  },\r\n})(Button);\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\ntype TButton = {\r\n  item: string\r\n  cleanValue: TypeSetState<string>\r\n}\r\nconst Buttons:FC<TButton> = ({item, cleanValue}) => {\r\n  const classes = useStyles();\r\n  const addItem = (): void => {\r\n    Store.addTodo(item);\r\n    cleanValue(' ')\r\n  }\r\n  return (\r\n    <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} onClick={() => addItem()}>\r\n     Add task\r\n    </BootstrapButton>\r\n  );\r\n}\r\nexport default Buttons","import React, { FC,useState } from 'react'\r\nimport { Input } from '@material-ui/core';\r\nimport Buttons from './Buttons'\r\n\r\nconst Form:FC = () => {\r\n  const [value, setValue] = useState<string>(' ')\r\n  return (\r\n    <div>\r\n      <h2>Add tasks</h2>\r\n      <div className=\"row\">\r\n        <form id=\"resete\">\r\n          <Input type=\"text\" placeholder=\"hello\" value={value} onChange={(e) => setValue(e.target.value)}></Input>\r\n        </form>\r\n        <Buttons item={value} cleanValue={setValue}/>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { FC } from 'react';\r\nimport Header from './components/Header'\r\nimport {CheckboxList} from './components/CheckboxList'\r\nimport Form from './components/Form'\r\n\r\nconst App:FC = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <CheckboxList />\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}